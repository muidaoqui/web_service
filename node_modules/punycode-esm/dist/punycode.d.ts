/**
 * Creates an array containing the numeric code points of each Unicode
 * character in the string. While JavaScript uses UCS-2 internally,
 * this function will convert a pair of surrogate halves (each of which
 * UCS-2 exposes as separate characters) into a single code point,
 * matching UTF-16.
 *
 * @see {@link https://mathiasbynens.be/notes/javascript-encoding}
 *
 * @param string - The Unicode input string (UCS-2).
 * @returns The new array of code points.
 */
export declare const ucs2Decode: (string: string) => number[];
/**
 * Creates a string based on an array of numeric code points.
 *
 * @param codePoints - The array of numeric code points.
 * @returns The new Unicode string (UCS-2).
 */
export declare const ucs2Encode: (codePoints: readonly number[]) => string;
/**
 * Converts a Punycode string of ASCII-only symbols to a string of Unicode symbols.
 *
 * @param input - The Punycode string of ASCII-only symbols.
 * @returns The resulting string of Unicode symbols.
 */
export declare const decode: (input: string) => string;
/**
 * Converts a string of Unicode symbols (e.g. a domain name label) to a
 * Punycode string of ASCII-only symbols.
 *
 * @param input - The string of Unicode symbols.
 * @returns The resulting Punycode string of ASCII-only symbols.
 */
export declare const encode: (input: string) => string;
/**
 * Converts a Punycode string representing a domain name or an email address
 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
 * it doesn't matter if you call it on a string that has already been
 * converted to Unicode.
 *
 * @param input - The Punycoded domain name or email address to
 * convert to Unicode.
 * @returns The Unicode representation of the given Punycode
 * string.
 */
export declare const toUnicode: (input: string) => string;
/**
 * Converts a Unicode string representing a domain name or an email address to
 * Punycode. Only the non-ASCII parts of the domain name will be converted,
 * i.e. it doesn't matter if you call it with a domain that's already in
 * ASCII.
 *
 * @param input - The domain name or email address to convert, as a
 * Unicode string.
 * @returns The Punycode representation of the given domain name or
 * email address.
 */
export declare const toASCII: (input: string) => string;
//# sourceMappingURL=punycode.d.ts.map